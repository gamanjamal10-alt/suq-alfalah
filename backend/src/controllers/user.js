const User = require('../models/User');
const bcrypt = require('bcryptjs');
const jwt = require('jsonwebtoken');
exports.register = async (req,res)=>{ try{ const {name,email,password,role}=req.body; const existing=await User.findOne({email}); if(existing) return res.status(400).json({error:'Email exists'}); const hashed=await bcrypt.hash(password,10); const user=await User.create({name,email,password:hashed,role}); const token=jwt.sign({id:user._id},process.env.JWT_SECRET); res.status(201).json({user,token}); }catch(err){ res.status(400).json({error:err.message}); }};
exports.login=async(req,res)=>{ try{ const {email,password}=req.body; const user=await User.findOne({email}); if(!user) return res.status(404).json({message:'User not found'}); const match=await bcrypt.compare(password,user.password); if(!match) return res.status(401).json({message:'Invalid credentials'}); const token=jwt.sign({id:user._id},process.env.JWT_SECRET); res.json({user,token}); }catch(err){ res.status(400).json({error:err.message}); }};
