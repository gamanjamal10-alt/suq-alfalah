const Subscription=require('../models/Subscription'); const Store=require('../models/Store');
exports.paySubscription=async(req,res)=>{ try{ const {paymentMethod}=req.body; const store=await Store.findOne({owner:req.user._id}); const subscription=await Subscription.findById(store.subscription); if(!subscription) return res.status(404).json({message:'Subscription not found'}); const now=new Date(); subscription.paid=true; subscription.paymentMethod=paymentMethod; subscription.trial=false; subscription.startDate=now; subscription.endDate=new Date(now.setFullYear(now.getFullYear()+1)); await subscription.save(); store.active=true; await store.save(); res.json({message:'Subscription activated for one year.', subscription}); }catch(err){res.status(400).json({error:err.message});}};
exports.checkSubscriptions=async()=>{ const subscriptions=await Subscription.find({paid:true,endDate:{$lt:new Date()}}); for(const sub of subscriptions){ const store=await Store.findById(sub.store); store.active=false; await store.save(); }};
